Лабы - Основы информатики
Чеснов Илья Игоревич

В один пн стоит фунд, в другой архитектура - обе дисциплины ведет Чеснов Илья Игоревич.
Лабы у нас проходят в понедельник и в пятницу дистанционно.

Как проходят лабы:
Рассказывает теорию
Мы спрашиваем, что непонятно
Сдаем то, что было задано с предыдущей пары

Нужны задание лабы и отчет по лабе

Лаб за семестр будет примерно 7 и КП
КП - несколько лаб объединенных в одну

Со сдачей лаб не стоит затягивать, у человека в декабре у самого сессия

На обычную лабу дается неделя. На сложную лабу дается две недели
Оценки препод ставит субъективно.

Как понять, на что все сделал на пять:
1. Лаба правильно работает
2. Можешь объяснить, как всё работает

Общаемся в тг группу, в ЛС преподу не пишем.



ПЕРВАЯ ЛАБА - LINUX И UNIX подобные OC

Линукс - ось с открытым исходнным кодом, любой желающий может участвовать в написании ОС, если может быть чем-то полезен проекту

Зачем нужны ОС?
С компами надо как-то общаться, но они понимали лишь последовательность нулей и единиц, что является неудобным для человека языком
ОС создали для того, чтобы человек мог общаться с железом более простыми командами.
У первых компов не было GUI(графический интерфейс), была строка состояния(терминал).
У линукса может быть любой функционал, который вы настроите

Чем хорош Linux
1. Линукс мало весит
2. Линукс легко настроить практически под любое железо
3. В линуксе возможна более тонкая настройка, удаление чего угодно
4. Линукс - прекрасная ОС для серверов

Почему Линукс хорош для серверов:
1. Позволяет полностью управлять компом без GUI, чисто через командную строку

Учимся взаимодействовать с файловой системой
Файловая система устроена в виде дерева - графа без циклов
Убунту - это тоже ОС, она базируется на ОС Линукс
Убунту, Дебиан, Федора, Арч - это надстройки/модификации над Линукс, они называются дистрибутивами
Чистый Линукс можно настроить как ту же Убунту, но на это уйдет время

МакОС ялвяется UNIX подобной осью, как и Линукс
Линукс, по сути, - это переписанный Линусом Торвальдсом UNIX. Линукс вроде был написан на Си.


РАБОТА С ФАЙЛОВОЙ СИСТЕМОЙ

Конспект Линукс

man - мануал
pwd - показать абсолютный путь
~ - домашняя папа пользователя
cd .. - подняться выше на директорию выше
cd ../labs
cd / - корневая папка
cd ~/labs -переход в любую папку из любой через домашюю папку
clear - очищаем консоль
touch 1 - создание файла
cat file - создание файла
mkdir - создание директории
rmdir - удаление директории
mv - перемещение директорий/файлов ( mv 1.txt first/ )
ls можно использоваться через путь ( ls directory/ )
mv - переименовать файл ( mv a.txt b.txt )
cp - копирование ( cp 2.txt ~/labs/first ) cp имя путь
rm - удаление ( rm file.txt ) ( rm first -r {-r удалить рекурсивно( всё внутри )} )
tab - помощь в дописывании имен


КТО Я
whoami - узнать имя пользователя, в которого ты авторизован
who - выводит список всех авторизованных пользователей

ГДЕ Я
pwd - узнать абсолютный путь(от корня) до директории, в которой мы находимся
pwd

ПОМОГИТЕ (МАНУАЛ)
man - (manual) позволяет прочитать документацию почти по любой команде в Линуксе (даже man man). Выход из мануала по нажатию Q(quit)

СПИСОК ФАЙЛОВ
ls - выводит список директорий и файлов в той директории, где мы находимся(pwd) (list directory content). У команд в линукс есть флаги (command -flag). Флаги корректируют поведение программы. 
ls -i
ls -al
ls -A

СМЕНА ДИРЕКТОРИИ
cd - (change directory) позволяет перемещаться по абсолютному(от корня) пути или по относительному(отонсительно pwd) пути
~ - это путь от корня до директории пользователя
Пример 
cd labs_1 (где labs_1 - это папка в pwd)
cd .. (на директорию более высокого уровня, то есть ближе к корню)
cd labs (где labs - другая директория в pwd)
cd ../labs_1 (путь из labs в labs_1)
cd ~ (в директорию пользователя, так как тильда является абсолютным путем туда, то есть cd ~ == cd /home/microchel/)
cd / (в корень файловой системы)
cd /home/microchel/labs_1 или cd ~/labs_1 (переход из корня в labs_1

ОЧИСТКА ТЕРМИНАЛА
clear - удаляет вывод предыдущих команд (визуально очищает консоль). История введенных до этого команд сохраняется.

ИСТОРИЯ ВВЕДЕННЫХ КОМАНД
history - вывод истории команд

СОЗДАНИЕ ФАЙЛА
touch <filename> - создание файла с расширением или даже без него в pwd
Можно написать touch <path>/<filename> для создания файла в директории <path>

СОЗДАНИЕ ДИРЕКТОРИИ
mkdir first - (make directory) создание директории first в pwd
Директории в Линуксе хранятся как файл, но с особыми свойствами

ПЕРМЕЩЕНИЕ ФАЙЛОВ И ПАПОК
mv - (move) позволяет перемещать директории и файлы 
mv 1 first/ - перемещаем файл 1 в директорию first
ls first/ - посмотреть, что находится в директории first, находясь на уровень выше
mv 32.re4 cool_video.mp4 - переименование файла из 32.re4 в cool_video.mp4
mv first/ ~/labs - перенос папки first со всем содержимым в папку labs 

КОПИРОВАНИЕ
touch 2.txt
cp 2.txt ~/labs/first - (copy) копирование 2.txt в папку ~/labs/first

УДАЛЕНИЕ ФАЙЛА
rm 2.txt - (remove) удаление файла 2.txt
rm cool_video.mp4

УДАЛЕНИЕ ДИРЕКТОРИИ
cd ~/labs
rmdir first - удаление папки first
rm -r first - тоже удаление папки first (-r значит recursevly, позволяет удалять директории)

ВЫСТРЕЛИ СЕБЕ В НОГУ - КОМАНДА ОТ ИМЕНИ АДМИНА
sudo mkdir first - создание папки first от имени админа, позволяет создать папку в изначально защищенных от изменения директориях

WGET - СКАЧАТЬ ФАЙЛ ПО ССЫЛКЕ
wget https:\\google.com - скачивание html файла главное страницы гугл
wget https://i.ytimg.com/vi/dQw4w9WgXcQ/maxresdefault.jpg - НИКОГДА НЕ ПИШИТЕ ЭТО

ПОСМОТРЕТЬ СОДЕРЖИМОЕ ФАЙЛА
touch file.txt - создать файл
cat file.txt - вывести содержимое файла

ЭХО
echo something - выведет в консоль something

ПОСМОТРЕТЬ РОЦЕССЫ
ps - выведет список процессов некоторых

УСТАНОВКА И УДАЛЕНИЕ ПАКЕТОВ И ПРИЛОЖЕНИЙ
sudo apt install vim - установка vim
sudo apt remove vim - удаление vim

ТЕКСТОВЫЕ РЕДАКТОРЫ
nano - for poridges
vim - for you

Перенаправление потока ввода и вывода (с помощью >, >>, <, <<)
cat file1 >> file2 - дозапись в конец файла file2 всего содежимого файла file1
cat file1 > file 2 - запись содержимого файла file1 в file2, содержимое file2 сотрется

Пайплайн (вертикальная черточка | )
ls | cat >> file2 мы подаем команде cat в аргументы то, что вывела команда ls, а потом дозаписывем это в file2
history | grep cd 

ПОИСК ПО ДАННЫМ, ФИЛЬТР ДАННЫХ 
grep - (Global / Regular Expression search / and Print) 
grep "f" file2 - поиск и вывод всех строк в file2, которые содержат символ f

СОРТИРОВКА ДАННЫХ
sort 2 - сортировка содержимого файла 2 по, вроде бы, лексикографическому правилу

НАПИСАНИЕ И ЗАПУСК BASH СКРИПТОВ
bash скрипты имеют расширение .sh и пишутся на языке bash, пусть у нас есть script.sh
sh script.sh - запуск скрипта script.sh 
bash script.sh - аналогичная команда

ИЗМЕНЯЕМ СВОЙСТВА ФАЙЛА
chmod +x script.sh - (change mode executable) делаем файл script.sh исполняемым

./script.sh - запуск исполняемого файла script.sh просто по обращению к нему

Самые полезные лайхаки для работы в консоли:
1. Можно не писать название файла полностью. Есть автоподбор по нажатию Tab. Автоподбор работает как для автодополнения имени файла, так и для автодополнения пути.
2. Чтобы заново не набирать одни и те же команды, есть история команд. По истории введенных команд можно перемещаться с помощью стрелок вверх и вниз.
3. Существует поиск по истории команд history | grep "command_you_need"
4. Можно перебиндить копирование и вставку в консоль с ебучих Ctrl+Shift+C и Ctrl+Shift+V на человеческие Ctrl+C и Ctrl+V

